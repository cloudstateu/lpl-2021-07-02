apiVersion: v1
kind: ConfigMap
metadata:
  name: my-fluentd-forwarder-cm
  namespace: logging
data:
  fluentd-inputs.conf: |
    # HTTP input for the liveness and readiness probes
    <source>
      @type http
      port 9880
    </source>

    # Get the logs from the containers running in the node
    <source>
      @type tail
      path /var/log/containers/*lb-multiline-logs*.log
      # exclude Fluentd logs
      # exclude_path ["/var/log/containers/*fluentd*.log", "/var/log/containers/*elasticsearch*.log"]
      pos_file /opt/bitnami/fluentd/logs/buffers/fluentd-docker.pos
      tag kubernetes.*
      read_from_head true
      <parse>
         # When logs are in text format
         @type regexp
         expression /^(?<logtime>.+) (?<stream>stdout|stderr) (?<logtag>[FP]) (?<message>.+)$/im
         time_key logtime
         time_format %Y-%m-%dT%H:%M:%S.%N%Z
      </parse>
    </source>

    <filter kubernetes.**>
      @type parser
      key_name message
      # reserve_data true
      <parse>
        @type json
        time_key time
        time_type string
        time_format %iso8601
      </parse>
    </filter>

    # enrich with kubernetes metadata
    <filter kubernetes.**>
      @type kubernetes_metadata
    </filter>
  fluentd-output.conf: |
    # Throw the healthcheck to the standard output instead of forwarding it
    <match fluentd.healthcheck>
      @type stdout
    </match>
    
    # Forward all logs to the aggregators
    <match **>
      @type forward
      <server>
        host my-fluentd-0.my-fluentd-headless.logging.svc.cluster.local
        port 24224
      </server>
      <buffer>
        @type file
        path /opt/bitnami/fluentd/logs/buffers/logs.buffer
        flush_thread_count 2
        flush_interval 5s
      </buffer>
    </match>
  fluentd.conf: |
    <system>
      log_level debug
    </system>
    # Ignore fluentd own events
    <match fluent.**>
      @type null
    </match>

    @include fluentd-inputs.conf
    @include fluentd-output.conf
  metrics.conf: |
    # Prometheus Exporter Plugin
    # input plugin that exports metrics
    <source>
      @type prometheus
      port 24231
    </source>
    # input plugin that collects metrics from MonitorAgent
    <source>
      @type prometheus_monitor
      <labels>
        host #{hostname}
      </labels>
    </source>
    # input plugin that collects metrics for output plugin
    <source>
      @type prometheus_output_monitor
      <labels>
        host #{hostname}
      </labels>
    </source>
    # input plugin that collects metrics for in_tail plugin
    <source>
      @type prometheus_tail_monitor
      <labels>
        host #{hostname}
      </labels>
    </source>
